<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[fasheng的博客]]></title>
  <link href="http://fasheng.github.io/atom.xml" rel="self"/>
  <link href="http://fasheng.github.io/"/>
  <updated>2013-11-09T14:52:08+08:00</updated>
  <id>http://fasheng.github.io/</id>
  <author>
    <name><![CDATA[Xu FaSheng]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[利用 Pycairo 为图片添加阴影特效]]></title>
    <link href="http://fasheng.github.io/blog/2013-11-08-add-shadow-effect-for-a-picture-through-pycairo.html"/>
    <updated>2013-11-08T16:52:00+08:00</updated>
    <id>http://fasheng.github.io/blog/add-shadow-effect-for-a-picture-through-pycairo</id>
    <content type="html"><![CDATA[<p>
为图片添加阴影特效并不复杂，因为图片多是矩形，我们首先实现一个绘制
rectangle gradient 的函数，其中四个边角利用 radial gradient（径向渐变，
<a href="https://github.com/fasheng/fshdemo/tree/master/demo_cairo_radial_gradient">这里</a> 有一个示例）绘制，剩下四条边用 linear gradient（线性渐变）绘制，代码如下:
</p>




<div class="org-src-container">

<pre class="src src-python"><span style="color: #a020f0; font-weight: bold;">def</span> <span style="color: #990000;">do_draw_rectangle_gradient</span>(cr, width, height, radius,
                               color_stops=((0.0, 0.1, 0.1, 0.1, 1.0),
                                            (1.0, 0.6, 0.6, 0.6, 1.0))):
    <span style="color: #a020f0; font-weight: bold;">if</span> width &lt; 2 * radius:
        <span style="color: #0086b3;">width</span> = 2 * radius
    <span style="color: #a020f0; font-weight: bold;">if</span> height &lt; 2 * radius:
        <span style="color: #0086b3;">height</span> = 2 * radius

    <span style="color: #999988; font-style: italic;"># </span><span style="color: #999988; font-style: italic;">radial gradient center points for four corners, top-left, top-right, etc</span>
    <span style="color: #0086b3;">corner_tl</span> = (radius, radius)
    <span style="color: #0086b3;">corner_tr</span> = (width - radius, radius)
    <span style="color: #0086b3;">corner_bl</span> = (radius, height - radius)
    <span style="color: #0086b3;">corner_br</span> = (width - radius, height - radius)
    <span style="color: #0086b3;">corner_points</span> = (corner_tl, corner_tr, corner_br, corner_bl)

    <span style="color: #999988; font-style: italic;"># </span><span style="color: #999988; font-style: italic;">linear gradient rectangle info for four sides</span>
    <span style="color: #0086b3;">side_top</span> = (radius, 0, width - 2 * radius, radius)
    <span style="color: #0086b3;">side_bottom</span> = (radius, height - radius, width - 2 * radius, radius)
    <span style="color: #0086b3;">side_left</span> = (0, radius, radius, height - 2 * radius)
    <span style="color: #0086b3;">side_right</span> = (width - radius, radius, radius, height - 2 * radius)

    <span style="color: #999988; font-style: italic;"># </span><span style="color: #999988; font-style: italic;">draw four corners through radial gradient</span>
    <span style="color: #0086b3;">i</span> = 0
    <span style="color: #a020f0; font-weight: bold;">for</span> point <span style="color: #a020f0; font-weight: bold;">in</span> corner_points:
        <span style="color: #0086b3;">rg</span> = cairo.RadialGradient(point[0], point[1], 0, point[0], point[1], radius)
        <span style="color: #a020f0; font-weight: bold;">for</span> stop <span style="color: #a020f0; font-weight: bold;">in</span> color_stops:
            <span style="color: #a020f0; font-weight: bold;">if</span> stop:
                rg.add_color_stop_rgba(*stop)
        cr.move_to(point[0], point[1])
        <span style="color: #0086b3;">angle1</span> = math.pi + 0.5 * math.pi * i
        <span style="color: #0086b3;">angle2</span> = angle1 + 0.5 * math.pi
        cr.arc(point[0], point[1], radius, angle1, angle2)
        cr.set_source(rg)
        cr.fill()
        <span style="color: #0086b3;">i</span> = i + 1

    <span style="color: #999988; font-style: italic;"># </span><span style="color: #999988; font-style: italic;">draw four sides through linear gradient</span>
    <span style="color: #999988; font-style: italic;"># </span><span style="color: #999988; font-style: italic;">top side</span>
    <span style="color: #0086b3;">lg_top</span> = cairo.LinearGradient(side_top[0], side_top[1] + radius,
                                  side_top[0], side_top[1])
    <span style="color: #a020f0; font-weight: bold;">for</span> stop <span style="color: #a020f0; font-weight: bold;">in</span> color_stops:
        <span style="color: #a020f0; font-weight: bold;">if</span> stop:
            lg_top.add_color_stop_rgba(*stop)
    cr.rectangle(*side_top)
    cr.set_source(lg_top)
    cr.fill()

    <span style="color: #999988; font-style: italic;"># </span><span style="color: #999988; font-style: italic;">bottom side</span>
    <span style="color: #0086b3;">lg_bottom</span> = cairo.LinearGradient(side_bottom[0], side_bottom[1],
                                     side_bottom[0], side_bottom[1] + radius)
    <span style="color: #a020f0; font-weight: bold;">for</span> stop <span style="color: #a020f0; font-weight: bold;">in</span> color_stops:
        <span style="color: #a020f0; font-weight: bold;">if</span> stop:
            lg_bottom.add_color_stop_rgba(*stop)
    cr.rectangle(*side_bottom)
    cr.set_source(lg_bottom)
    cr.fill()

    <span style="color: #999988; font-style: italic;"># </span><span style="color: #999988; font-style: italic;">left side</span>
    <span style="color: #0086b3;">lg_left</span> = cairo.LinearGradient(side_left[0] + radius,
                                   side_left[1], side_left[0], side_left[1])
    <span style="color: #a020f0; font-weight: bold;">for</span> stop <span style="color: #a020f0; font-weight: bold;">in</span> color_stops:
        <span style="color: #a020f0; font-weight: bold;">if</span> stop:
            lg_left.add_color_stop_rgba(*stop)
    cr.rectangle(*side_left)
    cr.set_source(lg_left)
    cr.fill()

    <span style="color: #999988; font-style: italic;"># </span><span style="color: #999988; font-style: italic;">right side</span>
    <span style="color: #0086b3;">lg_right</span> = cairo.LinearGradient(side_right[0], side_right[1],
                                    side_right[0] + radius, side_right[1])
    <span style="color: #a020f0; font-weight: bold;">for</span> stop <span style="color: #a020f0; font-weight: bold;">in</span> color_stops:
        <span style="color: #a020f0; font-weight: bold;">if</span> stop:
            lg_right.add_color_stop_rgba(*stop)
    cr.rectangle(*side_right)
    cr.set_source(lg_right)
    cr.fill()
</pre>
</div>




<p>
<a href="https://github.com/fasheng/fshdemo/tree/master/demo_pycairo_rectangle_gradient">这里</a> 是完整代码, 程序截图如下,
</p>




<div class="figure">
<p><img src="../images_post/20131108-demo_pycairo_rectangle_gradient.png" alt="20131108-demo_pycairo_rectangle_gradient.png" title="demo pycairo rectangle gradient" width="60%" height="60%" />
</p>
<p><span class="figure-number">&#22270;1&nbsp;</span> demo pycairo rectangle gradient</p>
</div>




<p>
但仅仅如此还不行，为了让阴影效果最佳，还要用 bezier curve（贝塞尔曲线）来设置 color stop（颜色渐变规则），这里使用下面的曲线形式，其中X轴为
offset（偏移量，取值范围为 0~1，0 代表阴影绘制起点），Y轴为 alpha（颜色透明度，取值范围为0~1，0 代表完全透明），
</p>




<div class="figure">
<p><img src="../images_autogen/20131108-matplot_bezier.png" alt="20131108-matplot_bezier.png" />
</p>
</div>




<p>
<a href="https://github.com/fasheng/fshdemo/tree/master/demo_pycairo_image_shadow">这里</a> 是最终代码，程序截图如下，
</p>




<div class="figure">
<p><img src="../images_post/20131108-demo_pycairo_image_shadow.png" alt="20131108-demo_pycairo_image_shadow.png" title="demo pycairo image shadow" width="80%" height="80%" />
</p>
<p><span class="figure-number">&#22270;2&nbsp;</span> demo pycairo image shadow</p>
</div>




<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1">参考资料</h2>
<div class="outline-text-2" id="text-1">
<ul class="org-ul">
<li>zetcode 上很好的 cairo/pycairo 入门教程 <br  />
      <a href="http://zetcode.com/gfx/cairo/">http://zetcode.com/gfx/cairo/</a> <br  />
      <a href="http://zetcode.com/gfx/pycairo/">http://zetcode.com/gfx/pycairo/</a>
</li>
<li>pycairo 在线文档  <br  />
      <a href="http://cairographics.org/documentation/pycairo/2/index.html">http://cairographics.org/documentation/pycairo/2/index.html</a>
</li>
<li>bezier curve 相关资料 <br  />
      <a href="http://zh.wikipedia.org/wiki/%E8%B2%9D%E8%8C%B2%E6%9B%B2%E7%B7%9A">http://zh.wikipedia.org/wiki/%E8%B2%9D%E8%8C%B2%E6%9B%B2%E7%B7%9A</a> <br  />
      <a href="http://pomax.github.io/bezierinfo/">http://pomax.github.io/bezierinfo/</a>
</li>
</ul>
</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[利用 expect 简化 goagent 配置过程]]></title>
    <link href="http://fasheng.github.io/blog/2013-10-18-speed-up-setup-for-goagent-through-expect.html"/>
    <updated>2013-10-18T19:44:00+08:00</updated>
    <id>http://fasheng.github.io/blog/speed-up-setup-for-goagent-through-expect</id>
    <content type="html"><![CDATA[<p>
代码如下<sup>[<a id="fnr.1" name="fnr.1" class="footref" href="#fn.1">1</a>]</sup>，
</p>


<div class="org-src-container">

<pre class="src src-tcl"><span style="color: #999988; font-style: italic;">#</span><span style="color: #999988; font-style: italic;">! /usr/bin/expect -f</span>

<span style="color: #483d8b;">set</span> <span style="color: #0086b3;">timeout</span> 60

<span style="color: #a020f0; font-weight: bold;">if</span> {$<span style="color: #0086b3;">argc</span> != 2} {
    <span style="color: #483d8b;">set</span> <span style="color: #0086b3;">scriptname</span> [<span style="color: #483d8b;">lindex</span> [<span style="color: #483d8b;">split</span> $<span style="color: #0086b3;">argv0</span> <span style="color: #dd1144;">"/"</span>] end]
    send_user <span style="color: #dd1144;">"Usage: $scriptname \"APPID01|APPID02..\" &lt;email&gt;\n"</span>
    <span style="color: #a020f0; font-weight: bold;">exit</span>
}

<span style="color: #a020f0; font-weight: bold;">proc</span> <span style="color: #990000;">getpass</span> pwprompt {
    <span style="color: #483d8b;">set</span> <span style="color: #0086b3;">oldmode</span> [stty -echo -raw]
    send_user <span style="color: #dd1144;">"\n$pwprompt"</span>
    <span style="color: #483d8b;">set</span> <span style="color: #0086b3;">timeout</span> -1
    expect_user -re <span style="color: #dd1144;">"(.*)\n"</span>
    send_user <span style="color: #dd1144;">"\n"</span>
    <span style="color: #a020f0; font-weight: bold;">eval</span> stty $<span style="color: #0086b3;">oldmode</span>
    <span style="color: #a020f0; font-weight: bold;">return</span> $<span style="color: #0086b3;">expect_out</span>(1,<span style="color: #483d8b;">string</span>)
}

<span style="color: #483d8b;">set</span> <span style="color: #0086b3;">appids</span> [<span style="color: #483d8b;">lindex</span> $<span style="color: #0086b3;">argv</span> 0]
<span style="color: #483d8b;">set</span> <span style="color: #0086b3;">appidlist</span> [<span style="color: #483d8b;">split</span> [<span style="color: #483d8b;">lindex</span> $<span style="color: #0086b3;">argv</span> 0] <span style="color: #dd1144;">"|"</span>]
<span style="color: #483d8b;">set</span> <span style="color: #0086b3;">email</span> [<span style="color: #483d8b;">lindex</span> $<span style="color: #0086b3;">argv</span> 1]
<span style="color: #483d8b;">set</span> <span style="color: #0086b3;">password</span> [getpass <span style="color: #dd1144;">"Please enter password: "</span>]

<span style="color: #483d8b;">set</span> <span style="color: #0086b3;">python</span> <span style="color: #dd1144;">"python2"</span>
<span style="color: #483d8b;">set</span> <span style="color: #0086b3;">uploader</span> <span style="color: #dd1144;">"/usr/share/goagent/server/uploader.zip"</span>
<span style="color: #483d8b;">set</span> <span style="color: #0086b3;">command</span> <span style="color: #dd1144;">"$python $uploader"</span>

spawn $<span style="color: #0086b3;">python</span> $<span style="color: #0086b3;">uploader</span>
expect -nocase <span style="color: #dd1144;">"appid:"</span> {send <span style="color: #dd1144;">"$appids\r"</span>}
<span style="color: #a020f0; font-weight: bold;">for</span> {<span style="color: #483d8b;">set</span> i 0} {$<span style="color: #0086b3;">i</span> &lt; [<span style="color: #483d8b;">llength</span> $<span style="color: #0086b3;">appidlist</span>]} {<span style="color: #483d8b;">incr</span> i} {
    <span style="color: #483d8b;">set</span> <span style="color: #0086b3;">appid</span> [<span style="color: #483d8b;">lindex</span> $<span style="color: #0086b3;">appidlist</span> $<span style="color: #0086b3;">i</span>]
    expect -nocase <span style="color: #dd1144;">"application:"</span> {send_user <span style="color: #dd1144;">"\n\n==&gt; Setup up appid: $appid"</span>}
    expect -nocase <span style="color: #dd1144;">"email:"</span> {send <span style="color: #dd1144;">"$email\r"</span>}
    expect -nocase <span style="color: #dd1144;">"password for"</span> {send <span style="color: #dd1144;">"$password\r"</span>}
    expect -nocase <span style="color: #dd1144;">"email:"</span> {send <span style="color: #dd1144;">"$email\r"</span>}
    expect -nocase <span style="color: #dd1144;">"password for"</span> {send <span style="color: #dd1144;">"$password\r"</span>}
}

expect <span style="color: #dd1144;">"&#19978;&#20256;&#25104;&#21151;"</span> {send <span style="color: #dd1144;">"\r"</span>}
interact
</pre>
</div>




<p>
使用方法很简单，运行脚本，而后输入密码即可：
</p>


<div class="org-src-container">

<pre class="src src-sh">sudo ./expect_goagent.tcl <span style="color: #dd1144;">"appid01|appid02"</span> your@gmail.com
</pre>
</div>


<div id="footnotes">
<h2 class="footnotes">&#33050;&#27880;: </h2>
<div id="text-footnotes">

<div class="footdef"><sup>[<a id="fn.1" name="fn.1" class="footnum" href="#fnr.1">1</a>]</sup> <p class="footpara">
<a href="https://gist.github.com/fasheng/7040434">https://gist.github.com/fasheng/7040434</a>
</p></div>


</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[设置 org-mode 导出为 html 时的代码高亮风格]]></title>
    <link href="http://fasheng.github.io/blog/2013-10-06-change-code-color-style-when-publish-org-mode-to-html.html"/>
    <updated>2013-10-06T18:06:00+08:00</updated>
    <id>http://fasheng.github.io/blog/change-code-color-style-when-publish-org-mode-to-html</id>
    <content type="html"><![CDATA[<p>
结合 org-mode 与 octopress 来写博客还是挺方便的，只是遇到一个代码高亮的问题，原因是 org-mode 导出为 html 时通过 <strong>htmlize</strong> 来格式化代码，而代码风格依赖于 emacs 的外观主题，个人 emacs 常用的是暗系风格主题，但博客主题风格与之相反，这样导出的代码区块部署到博客页面会不太协调。解决办法也挺简单，为 <code>org-publish</code> 添加 defadvice，在发布博客前设置一个与页面协调的主题即可，个人觉得主题 github<sup>[<a id="fnr.1" name="fnr.1" class="footref" href="#fn.1">1</a>]</sup> 挺不错，代码如下：
</p>




<div class="org-src-container">

<pre class="src src-elisp">(<span style="color: #a020f0; font-weight: bold;">defadvice</span> <span style="color: #990000;">org-publish</span> (around fsh-org-publish-advice
                                        (project <span style="color: #445588;">&amp;optional</span> force async) activate)
  <span style="color: #dd1144;">"Change theme before publishing, for getting a good html code highlight style through</span>
<span style="color: #dd1144;">htmlize."</span>
  (<span style="color: #a020f0; font-weight: bold;">let</span> ((thems custom-enabled-themes))
      (<span style="color: #a020f0; font-weight: bold;">dolist</span> (theme thems)
        (disable-theme theme))
      (load-theme 'github)
      ad-do-it
      (disable-theme 'github)
      (<span style="color: #a020f0; font-weight: bold;">dolist</span> (theme thems)
        (enable-theme theme))
      ))
</pre>
</div>


<div id="footnotes">
<h2 class="footnotes">&#33050;&#27880;: </h2>
<div id="text-footnotes">

<div class="footdef"><sup>[<a id="fn.1" name="fn.1" class="footnum" href="#fnr.1">1</a>]</sup> <p class="footpara">
<a href="https://github.com/dudleyf/color-theme-github">https://github.com/dudleyf/color-theme-github</a>
</p></div>


</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[分享一款适用于 org-mode 的简洁风 LaTeX 简历模板]]></title>
    <link href="http://fasheng.github.io/blog/2013-09-26-share-a-simple-latex-resume-template-for-org-mode.html"/>
    <updated>2013-09-26T13:17:00+08:00</updated>
    <id>http://fasheng.github.io/blog/share-a-simple-latex-resume-template-for-org-mode</id>
    <content type="html"><![CDATA[<p>
使用 org-mode 导出 LaTeX 简历对我个人而言还是有一定吸引力的，原因之一是
org-mode 同时还可以导出为 html 文件，使得应用范围变得更广。于是自己参考了一些网上资料<sup>[<a id="fnr.1" name="fnr.1" class="footref" href="#fn.1">1</a>]</sup><sup>, </sup><sup>[<a id="fnr.2" name="fnr.2" class="footref" href="#fn.2">2</a>]</sup>编写了一个简单的简历模板，源码可以到<a href="https://github.com/fasheng/fsh_orgmode_latex_cv">这里</a>找到，下面是使用示例及对应 pdf 文件。
</p>




<div class="org-src-container">

<pre class="src src-org"><span style="color: #999988; font-style: italic;">#+LaTeX_HEADER: \usepackage{fsh_orgmode_cv}</span>
<span style="color: #999988; font-style: italic;">#+LaTeX_HEADER: \usepackage{xltxtra,fontspec,xunicode,xeCJK}</span>
<span style="color: #999988; font-style: italic;">#+LaTeX_HEADER: \setCJKmainfont{AR PL New Kai}</span>

<span style="color: #7f7f7f;">#+TITLE:</span> <span style="color: #191970; font-weight: bold;">&#20010;&#20154;&#31616;&#21382;</span>

<span style="color: #990000;">* &#31034;&#20363; &#19968;&#32423;&#26631;&#39064;</span>
<span style="color: #0086b3;">** &#20108;&#32423;&#26631;&#39064;</span>
   *&#20108;&#32423;&#27491;&#25991;*

   &#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;

<span style="color: #0086b3;">** &#20108;&#32423;&#26631;&#39064;</span>
   *&#20108;&#32423;&#27491;&#25991;*

   &#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;
   &#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;&#27491;&#25991;
</pre>
</div>




<p>
<a href="../downloads/20130926_demo_resume_cn.pdf">示例 pdf 下载</a>
</p>


<div id="footnotes">
<h2 class="footnotes">&#33050;&#27880;: </h2>
<div id="text-footnotes">

<div class="footdef"><sup>[<a id="fn.1" name="fn.1" class="footnum" href="#fnr.1">1</a>]</sup> <p class="footpara">
<a href="https://github.com/punchagan/resume">https://github.com/punchagan/resume</a>
</p></div>

<div class="footdef"><sup>[<a id="fn.2" name="fn.2" class="footnum" href="#fnr.2">2</a>]</sup> <p class="footpara">
<a href="http://www.latextemplates.com/template/plasmati-graduate-cv">http://www.latextemplates.com/template/plasmati-graduate-cv</a>
</p></div>


</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[org-mode 导出 html 时中文空格问题的临时解决方法]]></title>
    <link href="http://fasheng.github.io/blog/2013-09-25-fix-chinese-space-issue-when-exporting-org-mode-to-html.html"/>
    <updated>2013-09-25T16:51:00+08:00</updated>
    <id>http://fasheng.github.io/blog/fix-chinese-space-issue-when-exporting-org-mode-to-html</id>
    <content type="html"><![CDATA[<p>
最近开始使用 org-mode 写博客，发现导出为 html 后中文之间掺杂着不少多余的空格，对阅读有一定影响，搜索后发现该问题与 w3c 标准有关<sup>[<a id="fnr.1" name="fnr.1" class="footref" href="#fn.1">1</a>]</sup><sup>[<a id="fnr.2" name="fnr.2" class="footref" href="#fn.2">2</a>]</sup>，属于历史遗留问题，短时间内应不会解决。
</p>




<p>
后通过学习 ox-html 源码，找到一种临时解决方法<sup>[<a id="fnr.3" name="fnr.3" class="footref" href="#fn.3">3</a>]</sup>，通过给函数
<code>org-html-paragraph</code> 添加 defadvice，使得导出 html 前自动将段落中的多行中文合并为一行，且不会影响源文件，个人认为还算实用，可供参考（org-mode 8.x
下工作正常）：
</p>




<div class="org-src-container">

<pre class="src src-emacs-lisp">(<span style="color: #a020f0; font-weight: bold;">defadvice</span> <span style="color: #990000;">org-html-paragraph</span> (before fsh-org-html-paragraph-advice
                                      (paragraph contents info) activate)
  <span style="color: #dd1144;">"Join consecutive Chinese lines into a single long line without</span>
<span style="color: #dd1144;">unwanted space when exporting org-mode to html."</span>
  (<span style="color: #a020f0; font-weight: bold;">let</span> ((fixed-contents)
        (orig-contents (ad-get-arg 1))
        (reg-han <span style="color: #dd1144;">"[[:multibyte:]]"</span>))
    (setq fixed-contents (replace-regexp-in-string
                          (concat <span style="color: #dd1144;">"</span><span style="color: #009926; font-weight: bold;">\\</span><span style="color: #009926; font-weight: bold;">(</span><span style="color: #dd1144;">"</span> reg-han <span style="color: #dd1144;">"</span><span style="color: #009926; font-weight: bold;">\\</span><span style="color: #009926; font-weight: bold;">)</span><span style="color: #dd1144;"> *\n *</span><span style="color: #009926; font-weight: bold;">\\</span><span style="color: #009926; font-weight: bold;">(</span><span style="color: #dd1144;">"</span> reg-han <span style="color: #dd1144;">"</span><span style="color: #009926; font-weight: bold;">\\</span><span style="color: #009926; font-weight: bold;">)</span><span style="color: #dd1144;">"</span>)
                          <span style="color: #dd1144;">"\\1\\2"</span> orig-contents))
    (ad-set-arg 1 fixed-contents)
    ))
</pre>
</div>


<div id="footnotes">
<h2 class="footnotes">&#33050;&#27880;: </h2>
<div id="text-footnotes">

<div class="footdef"><sup>[<a id="fn.1" name="fn.1" class="footnum" href="#fnr.1">1</a>]</sup> <p class="footpara">
<a href="http://stackoverflow.com/questions/8550112/prevent-browser-converting-n-between-lines-into-space-for-chinese-characters/8551033#8551033">http://stackoverflow.com/questions/8550112/prevent-browser-converting-n-between-lines-into-space-for-chinese-characters/8551033#8551033</a>
</p></div>

<div class="footdef"><sup>[<a id="fn.2" name="fn.2" class="footnum" href="#fnr.2">2</a>]</sup> <p class="footpara">
<a href="http://chenyufei.info/blog/2011-12-23/fix-chinese-newline-becomes-space-in-browser-problem/">http://chenyufei.info/blog/2011-12-23/fix-chinese-newline-becomes-space-in-browser-problem/</a>
</p></div>

<div class="footdef"><sup>[<a id="fn.3" name="fn.3" class="footnum" href="#fnr.3">3</a>]</sup> <p class="footpara">
<a href="https://gist.github.com/fasheng/6696398">https://gist.github.com/fasheng/6696398</a>
</p></div>


</div>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Experimental post for org-mode under octopress]]></title>
    <link href="http://fasheng.github.io/blog/2013-09-12-Experimental-post-for-org-mode-under-octopress.html"/>
    <updated>2013-09-12T18:18:00+08:00</updated>
    <id>http://fasheng.github.io/blog/Experimental-post-for-org-mode-under-octopress</id>
    <content type="html"><![CDATA[<p>
<strong>Excerpts:</strong>
Here is excerpts.
</p>




<!--more-->




<div id="outline-container-sec-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> Header</h2>
<div class="outline-text-2" id="text-1">
<p>
<strong>blod text</strong>
</p>

<p>
<cite>italic text</cite>
</p>

<p>
<code>code text</code>
</p>

<p>
<span class="underline">underline text</span>
</p>

<p>
<del>delete text text text text text text</del>
</p>

<p>
text text text text text text text text text text text text text
text text text text text text text text text text text text text
</p>
</div>
</div>




<div id="outline-container-sec-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> Table</h2>
<div class="outline-text-2" id="text-2">
<div></div>
<table border="">
<caption align="bottom"><span class="table-number">Table 1:</span> a simple table</caption>

<colgroup>
<col  class="left" />

<col  class="right" />

<col  class="right" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">Name</th>
<th scope="col" class="right">Phone</th>
<th scope="col" class="right">Age</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">Peter</td>
<td class="right">1234</td>
<td class="right">17</td>
</tr>

<tr>
<td class="left">Anna</td>
<td class="right">4321</td>
<td class="right">25</td>
</tr>
</tbody>
</table>

<div></div>
<table id="tab:demo-table-2" border="">
<caption align="bottom"><span class="table-number">Table 2:</span> a simple table with a very very very long name</caption>

<colgroup>
<col  class="left" />

<col  class="left" />

<col  class="right" />
</colgroup>
<thead>
<tr>
<th scope="col" class="left">Sede</th>
<th scope="col" class="left">Max cites</th>
<th scope="col" class="right">H-index</th>
</tr>
</thead>
<tbody>
<tr>
<td class="left">Chile</td>
<td class="left">257.72</td>
<td class="right">21.39</td>
</tr>

<tr>
<td class="left">Leeds</td>
<td class="left">165.77</td>
<td class="right">19.68</td>
</tr>

<tr>
<td class="left">Sao Paolo</td>
<td class="left">71.00</td>
<td class="right">11.50</td>
</tr>

<tr>
<td class="left">Stockholm</td>
<td class="left">134.19</td>
<td class="right">14.33</td>
</tr>

<tr>
<td class="left">Morelia</td>
<td class="left">257.56</td>
<td class="right">17.67</td>
</tr>
</tbody>
</table>
</div>
</div>


<div id="outline-container-sec-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> Block quotes</h2>
<div class="outline-text-2" id="text-3">
<p class="verse">
Great clouds overhead<br  />
Tiny black birds rise and fall<br  />
Snow covers Emacs<br  />
<br  />
&#x2013; AlexSchroeder<br  />
</p>

<blockquote>
<p>
Everything should be made as simple as possible,
but not any simpler &#x2013; Albert Einstein
</p>
</blockquote>
</div>
</div>


<div id="outline-container-sec-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> Code</h2>
<div class="outline-text-2" id="text-4">
</div>
<div id="outline-container-sec-4-1" class="outline-3">
<h3 id="sec-4-1"><span class="section-number-3">4.1</span> code surround by &#8216;#+BEGIN_EXAMPLE&#8217;</h3>
<div class="outline-text-3" id="text-4-1">
<pre class="example">
def show
  @widget = Widget(params[:id])
  respond_to do |format|
    format.html # show.html.erb
    format.json { render json: @widget }
  end
end
</pre>
</div>
</div>
<div id="outline-container-sec-4-2" class="outline-3">
<h3 id="sec-4-2"><span class="section-number-3">4.2</span> code surround by &#8216;#+BEGIN_SRC&#8217;</h3>
<div class="outline-text-3" id="text-4-2">
<div class="org-src-container">

<pre class="src src-ruby"><span style="color: #a020f0; font-weight: bold;">def</span> <span style="color: #990000;">show</span>
  <span style="color: #0086b3;">@widget</span> = <span style="color: #445588;">Widget</span>(params[<span style="color: #990073;">:id</span>])
  respond_to <span style="color: #a020f0; font-weight: bold;">do</span> |format|
    format.html <span style="color: #999988; font-style: italic;"># </span><span style="color: #999988; font-style: italic;">show.html.erb</span>
    format.json { render <span style="color: #990073;">json</span>: <span style="color: #0086b3;">@widget</span> }
  <span style="color: #a020f0; font-weight: bold;">end</span>
<span style="color: #a020f0; font-weight: bold;">end</span>
</pre>
</div>
</div>
</div>
<div id="outline-container-sec-4-3" class="outline-3">
<h3 id="sec-4-3"><span class="section-number-3">4.3</span> code surround by &#8216;#+BEGIN_SRC&#8217;, enable number line and inner reference</h3>
<div class="outline-text-3" id="text-4-3">
<div class="org-src-container">

<pre class="src src-emacs-lisp"><span id="coderef-sc" class="coderef-off"><span class="linenr">1: </span>(<span style="color: #a020f0; font-weight: bold;">save-excursion</span></span>
<span id="coderef-jump" class="coderef-off"><span class="linenr">2: </span>   (goto-char (point-min))</span>
</pre>
</div>
<p>
In line <a href="#coderef-sc"class="coderef" onmouseover="CodeHighlightOn(this, 'coderef-sc');" onmouseout="CodeHighlightOff(this, 'coderef-sc');">1</a> we remember the current position.  <a href="#coderef-jump"class="coderef" onmouseover="CodeHighlightOn(this, 'coderef-jump');" onmouseout="CodeHighlightOff(this, 'coderef-jump');">Line 2</a>
jumps to point-min.
</p>
</div>
</div>
<div id="outline-container-sec-4-4" class="outline-3">
<h3 id="sec-4-4"><span class="section-number-3">4.4</span> code highlight by pygments</h3>
<div class="outline-text-3" id="text-4-4">
</div>
<div id="outline-container-sec-4-4-1" class="outline-4">
<h4 id="sec-4-4-1"><span class="section-number-4">4.4.1</span> syntax by backtick</h4>
<div class="outline-text-4" id="text-4-4-1">
<p>
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>  <span class="vi">@widget</span> <span class="o">=</span> <span class="no">Widget</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="c1"># show.html.erb</span>
</span><span class='line'>    <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="vi">@widget</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>
</p>
</div>
</div>
<div id="outline-container-sec-4-4-2" class="outline-4">
<h4 id="sec-4-4-2"><span class="section-number-4">4.4.2</span> syntax by &#8216;codeblock&#8217;</h4>
<div class="outline-text-4" id="text-4-4-2">
<p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">show</span>
</span><span class='line'>  <span class="vi">@widget</span> <span class="o">=</span> <span class="no">Widget</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'>  <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="c1"># show.html.erb</span>
</span><span class='line'>    <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="vi">@widget</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

</p>
</div>
</div>

<div id="outline-container-sec-4-4-3" class="outline-4">
<h4 id="sec-4-4-3"><span class="section-number-4">4.4.3</span> syntax by &#8216;highlight&#8217;</h4>
<div class="outline-text-4" id="text-4-4-3">
<p>

<div class="highlight"><pre><code class="ruby"><span class="k">def</span> <span class="nf">show</span>
  <span class="vi">@widget</span> <span class="o">=</span> <span class="no">Widget</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
  <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
    <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="c1"># show.html.erb</span>
    <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="vi">@widget</span> <span class="p">}</span>
  <span class="k">end</span>
<span class="k">end</span>
</code></pre></div>

</p>
</div>
</div>
</div>
</div>


<div id="outline-container-sec-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> Footnote and reference</h2>
<div class="outline-text-2" id="text-5">
<p>
thie is a reference<sup>[<a id="fnr.1" name="fnr.1" class="footref" href="#fn.1">1</a>]</sup>
</p>

<p>
this is another reference<sup>[<a id="fnr.2" name="fnr.2" class="footref" href="#fn.2">2</a>]</sup>
</p>
</div>
</div>




<div id="outline-container-sec-6" class="outline-2">
<h2 id="sec-6"><span class="section-number-2">6</span> Links</h2>
<div class="outline-text-2" id="text-6">
<p>
link to <a href="http:2013-09-12-Test-post.html">aother post</a>
</p>
</div>
</div>




<div id="outline-container-sec-7" class="outline-2">
<h2 id="sec-7"><span class="section-number-2">7</span> Image</h2>
<div class="outline-text-2" id="text-7">
</div>
<div id="outline-container-sec-7-1" class="outline-3">
<h3 id="sec-7-1"><span class="section-number-3">7.1</span> independent image</h3>
<div class="outline-text-3" id="text-7-1">

<div class="figure">
<p><img src="../images_post/head_cowfish.jpg" alt="head_cowfish.jpg" title="demo image cowfish" width="300" height="250" />
</p>
<p><span class="figure-number">Figure 1:</span> demo image cowfish</p>
</div>

<p>
text text text text text text text text text text text text text
</p>
</div>
</div>
<div id="outline-container-sec-7-2" class="outline-3">
<h3 id="sec-7-2"><span class="section-number-3">7.2</span> image surround by text</h3>
<div class="outline-text-3" id="text-7-2">

<div class="figure">
<p><img src="../images_post/head_cowfish.jpg" alt="head_cowfish.jpg" title="demo image cowfish" class="left" width="300" height="250" />
</p>
<p><span class="figure-number">Figure 2:</span> <strong>demo image cowfish</strong></p>
</div>

<p>
text text text text text text text text text text text text text
text text text text text text text text text text text text text
text text text text text text text text text text text text text
text text text text text text text text text text text text text
text text text text text text text text text text text text text
text text text text text text text text text text text text text
text text text text text text text text text text text text text
text text text text text text text text text text text text text
text text text text text text text text text text text text text
text text text text text text text text text text text text text
text text text text text text text text text text text text text
text text text text text text text text text text text text text
text text text text text text text
</p>
</div>
</div>
</div>


<div id="outline-container-sec-8" class="outline-2">
<h2 id="sec-8"><span class="section-number-2">8</span> Attachment</h2>
<div class="outline-text-2" id="text-8">
<p>
<a href="../downloads/demo_attachment_Texlive_%E5%AE%98%E6%96%B9%E6%8C%87%E5%8D%97_zh-cn.pdf">download demo attachment</a>
</p>
</div>
</div>




<div id="outline-container-sec-9" class="outline-2">
<h2 id="sec-9"><span class="section-number-2">9</span> Math</h2>
<div class="outline-text-2" id="text-9">
</div>
<div id="outline-container-sec-9-1" class="outline-3">
<h3 id="sec-9-1"><span class="section-number-3">9.1</span> latex fragment</h3>
<div class="outline-text-3" id="text-9-1">
\begin{equation}
\Pr(X_t=j|X_{t-1}=i) = \frac{j(j-1)}{2}\Big(\frac{i}{N}\Big)^j\Big(\frac{N-i}{N}\Big)^{n-j}
\end{equation}
</div>
</div>
<div id="outline-container-sec-9-2" class="outline-3">
<h3 id="sec-9-2"><span class="section-number-3">9.2</span> latex source code</h3>
<div class="outline-text-3" id="text-9-2">
<div class="org-src-container">

<pre class="src src-latex"><span style="color: #a020f0; font-weight: bold;">\begin</span>{<span style="color: #990000;">equation</span>}
<span style="color: #8b4513;">\Pr</span><span style="color: #8b4513;">(X_t=j|X_{t-1}=i) = </span><span style="color: #8b4513;">\frac</span><span style="color: #8b4513;">{j(j-1)}{2}</span><span style="color: #8b4513;">\Big</span><span style="color: #8b4513;">(</span><span style="color: #8b4513;">\frac</span><span style="color: #8b4513;">{i}{N}</span><span style="color: #8b4513;">\Big</span><span style="color: #8b4513;">)^j</span><span style="color: #8b4513;">\Big</span><span style="color: #8b4513;">(</span><span style="color: #8b4513;">\frac</span><span style="color: #8b4513;">{N-i}{N}</span><span style="color: #8b4513;">\Big</span><span style="color: #8b4513;">)^{n-j}</span>
<span style="color: #a020f0; font-weight: bold;">\end</span>{<span style="color: #990000;">equation</span>}
</pre>
</div>

\begin{equation}
\Pr(X_t=j|X_{t-1}=i) = \frac{j(j-1)}{2}\Big(\frac{i}{N}\Big)^j\Big(\frac{N-i}{N}\Big)^{n-j}
\end{equation}
</div>
</div>
</div>


<div id="outline-container-sec-10" class="outline-2">
<h2 id="sec-10"><span class="section-number-2">10</span> Auto generated image</h2>
<div class="outline-text-2" id="text-10">
</div><div id="outline-container-sec-10-1" class="outline-3">
<h3 id="sec-10-1"><span class="section-number-3">10.1</span> latex result to image file</h3>
<div class="outline-text-3" id="text-10-1">
<p>
Image background will be effect by your emacs environtment.
</p>

<div class="org-src-container">

<pre class="src src-latex"><span style="color: #a020f0; font-weight: bold;">\begin</span>{<span style="color: #990000;">equation</span>}
<span style="color: #8b4513;">\Pr</span><span style="color: #8b4513;">(X_t=j|X_{t-1}=i) = </span><span style="color: #8b4513;">\frac</span><span style="color: #8b4513;">{j(j-1)}{2}</span><span style="color: #8b4513;">\Big</span><span style="color: #8b4513;">(</span><span style="color: #8b4513;">\frac</span><span style="color: #8b4513;">{i}{N}</span><span style="color: #8b4513;">\Big</span><span style="color: #8b4513;">)^j</span><span style="color: #8b4513;">\Big</span><span style="color: #8b4513;">(</span><span style="color: #8b4513;">\frac</span><span style="color: #8b4513;">{N-i}{N}</span><span style="color: #8b4513;">\Big</span><span style="color: #8b4513;">)^{n-j}</span>
<span style="color: #a020f0; font-weight: bold;">\end</span>{<span style="color: #990000;">equation</span>}
</pre>
</div>


<div class="figure">
<p><img src="../images_autogen/20130912-demo_latex.png" alt="20130912-demo_latex.png" />
</p>
</div>
</div>
</div>
<div id="outline-container-sec-10-2" class="outline-3">
<h3 id="sec-10-2"><span class="section-number-3">10.2</span> ditaa</h3>
<div class="outline-text-3" id="text-10-2">
<div class="org-src-container">

<pre class="src src-ditaa">+----------+ edit +----------+   input +----------+ compile +----------+
|  cPNK    |      |  cRED    |         |   cGRE   |         |  cPNK    |
| refined  |&lt;-----+ h,cpp    +--------&gt;+ compiler,+--------&gt;+Executable|
|   h,cpp  |      |          |         | linker   |         |   File   |
| {s}      |      |  {io}    |         |          |         |    {s}   |
+----------+      +----+-----+         +----------+         +----------+
                       | input
                       v
                  +----------+
                  |  cGRE    |
                  | doxygen  |
                  |          |
                  +----+-----+
                       | process
                       v
                  +----------+
                  |  cPNK    |
                  | Doxgen   |
                  | Document |
                  |    {d}   |
                  +----------+
</pre>
</div>


<div class="figure">
<p><img src="../images_autogen/20130912-demo_ditaa.png" alt="20130912-demo_ditaa.png" />
</p>
</div>
</div>
</div>
<div id="outline-container-sec-10-3" class="outline-3">
<h3 id="sec-10-3"><span class="section-number-3">10.3</span> dot</h3>
<div class="outline-text-3" id="text-10-3">
<div class="org-src-container">

<pre class="src src-dot">digraph G {
  size=<span style="color: #dd1144;">"8,6"</span>
  ratio=expand
  edge [dir=both]
  plcnet [shape=box, label=<span style="color: #dd1144;">"PLC Network"</span>]
  subgraph cluster_wrapline {
    label=<span style="color: #dd1144;">"Wrapline Control System"</span>
    color=purple
    subgraph {
    rank=same
    exec
    sharedmem [style=filled, fillcolor=lightgrey, shape=box]
    }
    edge[style=dotted, dir=none]
    exec -&gt; opserver
    exec -&gt; db
    plc -&gt; exec
    edge [style=line, dir=both]
    exec -&gt; sharedmem
    sharedmem -&gt; db
    plc -&gt; sharedmem
    sharedmem -&gt; opserver
  }
  plcnet -&gt; plc [constraint=false]
  millwide [shape=box, label=<span style="color: #dd1144;">"Millwide System"</span>]
  db -&gt; millwide

  subgraph cluster_opclients {
    color=blue
    label=<span style="color: #dd1144;">"Operator Clients"</span>
    rankdir=LR
    labelloc=b
    node[label=client]
    opserver -&gt; client1
    opserver -&gt; client2
    opserver -&gt; client3
  }
}
</pre>
</div>


<div class="figure">
<p><img src="../images_autogen/20130912-demo_dot.png" alt="20130912-demo_dot.png" />
</p>
</div>
</div>
</div>
<div id="outline-container-sec-10-4" class="outline-3">
<h3 id="sec-10-4"><span class="section-number-3">10.4</span> plantuml</h3>
<div class="outline-text-3" id="text-10-4">
<div class="org-src-container">

<pre class="src src-plantuml">title Example Sequence Diagram
activate Client
Client -&gt; Server: Session Initiation
note right: Client requests new session
activate Server
Client &lt;-- Server: Authorization Request
note left: Server requires authentication
Client -&gt; Server: Authorization Response
note right: Client provides authentication details
Server --&gt; Client: Session Token
note left: Session established
deactivate Server
Client -&gt; Client: Saves token
deactivate Client
</pre>
</div>


<div class="figure">
<p><img src="../images_autogen/20130912-demo_plantuml.png" alt="20130912-demo_plantuml.png" />
</p>
</div>
</div>
</div>
<div id="outline-container-sec-10-5" class="outline-3">
<h3 id="sec-10-5"><span class="section-number-3">10.5</span> asymptote</h3>
<div class="outline-text-3" id="text-10-5">
<div class="org-src-container">

<pre class="src src-asymptote"><span style="color: #483d8b;">import</span> geometry;

<span style="color: #990000;">size</span>(7<span style="color: #990073;">cm</span>,0);

<span style="color: #445588;">picture</span> <span style="color: #0086b3;">pic</span>;
<span style="color: #999988; font-style: italic;">// </span><span style="color: #999988; font-style: italic;">on d&#233;finit une courbe reliant les points (0,1) et (1,0)</span>
<span style="color: #445588;">path</span> <span style="color: #0086b3;">c</span>=(0,1){<span style="color: #990000;">dir</span>(-5)}..{<span style="color: #990000;">dir</span>(-5)}(1,0);
<span style="color: #999988; font-style: italic;">// </span><span style="color: #999988; font-style: italic;">&#224; l'aide de trois rotations, on d&#233;finit</span>
<span style="color: #999988; font-style: italic;">// </span><span style="color: #999988; font-style: italic;">le motif (dans un carr&#233; de 2 sur 2) ...</span>
<span style="color: #445588;">path</span> <span style="color: #0086b3;">motif</span>=<span style="color: #990000;">buildcycle</span>(c,<span style="color: #990000;">rotate</span>(90)*c,
                      <span style="color: #990000;">rotate</span>(180)*c,<span style="color: #990000;">rotate</span>(-90)*c);
<span style="color: #990000;">filldraw</span>(pic,motif,<span style="color: #990073;">lightred</span>+<span style="color: #990073;">white</span>,<span style="color: #990073;">black</span>);
<span style="color: #999988; font-style: italic;">// </span><span style="color: #999988; font-style: italic;">... et une double boucle pour "paver"</span>
<span style="color: #999988; font-style: italic;">// </span><span style="color: #999988; font-style: italic;">suivant (Ox) et suivant (Oy)</span>
<span style="color: #a020f0; font-weight: bold;">for</span>(<span style="color: #445588;">int</span> <span style="color: #0086b3;">i</span>=0; i&lt;n; ++i)
  {
    <span style="color: #a020f0; font-weight: bold;">for</span>(<span style="color: #445588;">int</span> <span style="color: #0086b3;">j</span>=0; j&lt;n; ++j)
      {
        <span style="color: #990000;">add</span>(<span style="color: #990000;">shift</span>(2*i,2*j)*pic);
      }
  }
</pre>
</div>


<div class="figure">
<p><img src="../images_autogen/20130912-demo_asy.png" alt="20130912-demo_asy.png" />
</p>
</div>
</div>
</div>
<div id="outline-container-sec-10-6" class="outline-3">
<h3 id="sec-10-6"><span class="section-number-3">10.6</span> r language</h3>
<div class="outline-text-3" id="text-10-6">
<div class="org-src-container">

<pre class="src src-R">plot(matrix(rnorm(100), ncol=2), type="l")
</pre>
</div>


<div class="figure">
<p><img src="../images_autogen/20130912-demo_r.png" alt="20130912-demo_r.png" />
</p>
</div>
</div>
</div>
<div id="outline-container-sec-10-7" class="outline-3">
<h3 id="sec-10-7"><span class="section-number-3">10.7</span> octave</h3>
<div class="outline-text-3" id="text-10-7">
<div class="org-src-container">

<pre class="src src-octave">figure( 1, <span style="color: #dd1144;">"visible"</span>, <span style="color: #dd1144;">"off"</span> );
sombrero;
print -r90 -dpng ../images_autogen/20130912-demo_octave.png;
<span style="color: #0086b3;">ans</span> = <span style="color: #dd1144;">"../images_autogen/20130912-demo_octave.png"</span>;
</pre>
</div>


<div class="figure">
<p><img src="../images_autogen/20130912-demo_octave.png" alt="20130912-demo_octave.png" />
</p>
</div>
</div>
</div>
</div>


<div id="footnotes">
<h2 class="footnotes">Footnotes: </h2>
<div id="text-footnotes">

<div class="footdef"><sup>[<a id="fn.1" name="fn.1" class="footnum" href="#fnr.1">1</a>]</sup> <p class="footpara">
<a href="http://www.footnote.com">http://www.footnote.com</a>
</p></div>

<div class="footdef"><sup>[<a id="fn.2" name="fn.2" class="footnum" href="#fnr.2">2</a>]</sup> <p class="footpara">
<a href="http://www.footnote2.com">http://www.footnote2.com</a>, this is a long description for the footnote
</p></div>


</div>
</div>

]]></content>
  </entry>
  
</feed>
